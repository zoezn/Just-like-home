stages:
 - test_back
 - build_back
 - package_back
 - deploy_back
# - build_front
# - deploy_front

variables:
  AWS_ACCESS_KEY_ID: "$AWS_ACCESS_KEY_ID"
  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
  S3_BUCKET_NAME: $S3_BUCKET_NAME
  MAVEN_OPTS: -Dmaven.repo.local=.m2/repository

#cache:
#  paths:
#  - .m2/repository
#  - ./BackEnd/PI/target

test_back:
 image: maven:3.8.6-openjdk-18
 stage: test_back
 before_script:
 - cd ./BackEnd/PI
 script:
 - echo "Maven test started"
 - "mvn clean test"

#build_back:
# image: maven:3.8.6-openjdk-18
# stage: build_back
# before_script:
# - cd ./BackEnd/PI
# script:
# - echo "Maven compile started"
# - "mvn compile"

#package_back:
# image: maven:3.8.6-openjdk-18
# stage: package_back
# before_script:
# - cd ./BackEnd/PI
# script:
# - "mvn package"
# artifacts:
#  paths:
#  - ./BackEnd/PI/target/consoleapp.jar

build_back:
    stage: build_back
    image: maven:3.8.6-openjdk-18
    script:
        - cd ./BackEnd/PI
        - echo "Maven compile started"
        - "mvn compile"
        - echo "Finished building the app."

package_back:
 stage: package_back
 image: maven:3.8.6-openjdk-18
 script:
   - cd ./BackEnd/PI
   - "mvn package"
 artifacts:
  paths:
  - /builds/ctd/proyecto-integrador-0822/1021-ft/grupo-06/BackEnd/PI/target/*

deploy_back:
 stage: deploy_back
 image: alpine:3.11
 before_script:
 - cd ./BackEnd/PI
 - apk update && apk add openssh-client bash
 - mkdir -p ~/.ssh
 - eval $(ssh-agent -s)
 - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
 - touch ~/.ssh/config
 - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
 - ssh-keyscan -H $DEPLOY_SERVER_IP >> ~/.ssh/known_hosts
 script:
 #- ssh ubuntu@$DEPLOY_SERVER_IP "sudo apt install openjdk-8-jdk -y"
 - ssh ubuntu@$DEPLOY_SERVER_IP "sudo systemctl stop consoleapp.service"
 - scp /builds/ctd/proyecto-integrador-0822/1021-ft/grupo-06/BackEnd/PI/target/consoleapp.jar ubuntu@$DEPLOY_SERVER_IP:~/console-app/
 - ssh ubuntu@$DEPLOY_SERVER_IP "sudo systemctl start consoleapp.service"

